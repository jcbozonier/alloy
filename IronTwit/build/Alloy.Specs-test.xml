<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="C:/Dev/alloy/IronTwit/Alloy/Alloy.Specs/bin/release/Alloy.Specs.dll" total="44" failures="0" not-run="0" date="2009-05-02" time="14:30:25">
  <environment nunit-version="2.4.8.0" clr-version="2.0.50727.3082" os-version="Microsoft Windows NT 5.1.2600 Service Pack 3" platform="Win32NT" cwd="C:\Dev\alloy\IronTwit" machine-name="KICKAPOO" user="jthigpen" user-domain="KICKAPOO" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite name="C:/Dev/alloy/IronTwit/Alloy/Alloy.Specs/bin/release/Alloy.Specs.dll" success="True" time="1.875" asserts="0">
    <results>
      <test-suite name="Unite" success="True" time="1.844" asserts="0">
        <results>
          <test-suite name="Specs" success="True" time="1.844" asserts="0">
            <results>
              <test-suite name="Application_running" success="True" time="0.156" asserts="0">
                <results>
                  <test-suite name="sending_messages" success="True" time="0.156" asserts="0">
                    <results>
                      <test-suite name="context" success="True" time="0.000" asserts="0">
                        <results />
                      </test-suite>
                      <test-suite name="When_sending_a_large_message_with_no_recipient" success="True" time="0.141" asserts="0">
                        <results>
                          <test-case name="Unite.Specs.Application_running.sending_messages.When_sending_a_large_message_with_no_recipient.It_clips_each_message_to_be_at_or_below_the_max_message_length" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="Unite.Specs.Application_running.sending_messages.When_sending_a_large_message_with_no_recipient.It_includes_the_recipient_in_each_message" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="Unite.Specs.Application_running.sending_messages.When_sending_a_large_message_with_no_recipient.It_should_be_broken_up_into_multiple_messages" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Unite.Specs.Application_running.sending_messages.When_sending_a_large_message_with_no_recipient.It_should_not_remove_any_letters_from_the_message" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Application_starting" success="True" time="0.484" asserts="0">
                <results>
                  <test-suite name="context" success="True" time="0.000" asserts="0">
                    <results />
                  </test-suite>
                  <test-suite name="When_main_view_is_shown_for_the_first_time" success="True" time="0.469" asserts="0">
                    <results>
                      <test-case name="Unite.Specs.Application_starting.When_main_view_is_shown_for_the_first_time.It_should_get_messages_for_user" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="Unite.Specs.Application_starting.When_main_view_is_shown_for_the_first_time.It_should_use_credentials_provided_by_user_to_get_messages" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Contacts" success="True" time="0.047" asserts="0">
                <results>
                  <test-suite name="When_receiving_a_message_with_a_known_contact" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="Unite.Specs.Contacts.When_receiving_a_message_with_a_known_contact.Its_name_should_appear_in_message_list" executed="True" success="True" time="0.016" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="When_receiving_a_message_with_an_unknown_contact" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Unite.Specs.Contacts.When_receiving_a_message_with_an_unknown_contact.It_should_have_the_name_be_the_same_as_the_username" executed="True" success="True" time="0.016" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="New_Starting_Application_Specs" success="True" time="0.563" asserts="0">
                <results>
                  <test-suite name="When_a_message_is_received_while_messages_already_exist" success="True" time="0.516" asserts="0">
                    <results>
                      <test-case name="Unite.Specs.New_Starting_Application_Specs.When_a_message_is_received_while_messages_already_exist.It_should_increase_the_number_of_viewable_messages_by_one" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Unite.Specs.New_Starting_Application_Specs.When_a_message_is_received_while_messages_already_exist.It_should_place_the_most_recent_message_at_the_top_of_the_list" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="When_application_starts" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="Unite.Specs.New_Starting_Application_Specs.When_application_starts.It_should_start_receiving_messages" executed="True" success="True" time="0.016" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="sending_message_specs" success="True" time="0.109" asserts="0">
                <results>
                  <test-suite name="Sending_a_message_in_general" success="True" time="0.063" asserts="0">
                    <results>
                      <test-case name="Unite.Specs.sending_message_specs.Sending_a_message_in_general.It_should_be_able_to_send_the_message" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Unite.Specs.sending_message_specs.Sending_a_message_in_general.It_should_be_sent" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Unite.Specs.sending_message_specs.Sending_a_message_in_general.It_should_be_sent_to_the_correct_recipient" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Unite.Specs.sending_message_specs.Sending_a_message_in_general.It_should_clear_the_message_field" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Unite.Specs.sending_message_specs.Sending_a_message_in_general.It_should_NOT_clear_the_recipient_field" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Unite.Specs.sending_message_specs.Sending_a_message_in_general.It_should_NOT_refresh_its_messages_just_because_we_sent_one" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="Unite.Specs.sending_message_specs.Sending_a_message_in_general.The_message_sent_should_match_the_one_provided_by_the_user" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="When_sending_a_message_containing_a_code_sample" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Unite.Specs.sending_message_specs.When_sending_a_message_containing_a_code_sample.The_sent_message_should_contain_a_url" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="Unite.Specs.sending_message_specs.When_sending_a_message_containing_a_code_sample.The_sent_message_should_NOT_contain_the_code_sample" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="When_sending_message_that_is_valid_for_multiple_services" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Unite.Specs.sending_message_specs.When_sending_message_that_is_valid_for_multiple_services.It_should_send_message_using_each_service" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="Unite.Specs.sending_message_specs.When_sending_message_that_is_valid_for_multiple_services.It_should_send_the_message_that_we_wanted_sent" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="starting_application_specs" success="True" time="0.047" asserts="0">
                <results>
                  <test-suite name="When_initiatializing_two_services_that_require_authentication" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Unite.Specs.starting_application_specs.When_initiatializing_two_services_that_require_authentication.Both_services_should_ask_to_authenticate" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="Unite.Specs.starting_application_specs.When_initiatializing_two_services_that_require_authentication.Both_services_should_be_passed_only_the_appropriate_credentials" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="When_messaging_service_needs_credentials" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Unite.Specs.starting_application_specs.When_messaging_service_needs_credentials.It_should_ask_ui_for_credentials" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="TwitterServicesScope" success="True" time="0.203" asserts="0">
                <results>
                  <test-suite name="context" success="True" time="0.000" asserts="0">
                    <results />
                  </test-suite>
                  <test-suite name="receiving_context" success="True" time="0.000" asserts="0">
                    <results />
                  </test-suite>
                  <test-suite name="When_receiving_messages" success="True" time="0.188" asserts="0">
                    <results>
                      <test-case name="Unite.Specs.TwitterServicesScope.When_receiving_messages.It_should_get_all_messages" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Unite.Specs.TwitterServicesScope.When_receiving_messages.It_should_request_credentials" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Unite.Specs.TwitterServicesScope.When_receiving_messages.It_should_use_the_credentials_provided_by_the_user" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="When_sending_a_large_message_with_no_recipient" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Unite.Specs.TwitterServicesScope.When_sending_a_large_message_with_no_recipient.It_clips_each_message_to_be_at_or_below_the_max_message_length" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Unite.Specs.TwitterServicesScope.When_sending_a_large_message_with_no_recipient.It_should_not_be_broken_up_into_multiple_messages" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="When_sending_a_large_message_with_recipient_first_time" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Unite.Specs.TwitterServicesScope.When_sending_a_large_message_with_recipient_first_time.It_clips_each_message_to_be_at_or_below_the_max_message_length" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Unite.Specs.TwitterServicesScope.When_sending_a_large_message_with_recipient_first_time.It_includes_the_recipient_in_the_message" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Unite.Specs.TwitterServicesScope.When_sending_a_large_message_with_recipient_first_time.It_should_not_be_broken_up_into_multiple_messages" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Unite.Specs.TwitterServicesScope.When_sending_a_large_message_with_recipient_first_time.It_should_request_user_credentials" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="UnitTests" success="True" time="0.203" asserts="0">
                <results>
                  <test-suite name="Formatting_messages_for_twitter" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Unite.Specs.UnitTests.Formatting_messages_for_twitter.TestOne" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="InlineUrlsTests" success="True" time="0.172" asserts="0">
                    <results>
                      <test-case name="Unite.Specs.UnitTests.InlineUrlsTests.NullOrEmptyMessageText" executed="True" success="True" time="0.109" asserts="2" />
                      <test-case name="Unite.Specs.UnitTests.InlineUrlsTests.SimpleUrlAtBeginningOfMessage" executed="True" success="True" time="0.063" asserts="4" />
                      <test-case name="Unite.Specs.UnitTests.InlineUrlsTests.SimpleUrlAtEndOfMessage" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="Unite.Specs.UnitTests.InlineUrlsTests.SimpleUrlInMiddleOfMessage" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="Unite.Specs.UnitTests.InlineUrlsTests.TwoUrlsInMiddleAndAtEnd" executed="True" success="True" time="0.000" asserts="7" />
                    </results>
                  </test-suite>
                  <test-suite name="ServiceResolverTests" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Unite.Specs.UnitTests.ServiceResolverTests.DetectEmailAddress" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Unite.Specs.UnitTests.ServiceResolverTests.DetectGChatAddress" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Unite.Specs.UnitTests.ServiceResolverTests.DetectTwitterAddress" executed="True" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Using_Services" success="True" time="0.016" asserts="0">
                <results>
                  <test-suite name="When_getting_messages" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Unite.Specs.Using_Services.When_getting_messages.It_should_get_messages_from_all_available_services" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>